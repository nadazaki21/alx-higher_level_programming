Requirments:
try all possible va;ues fofr Tests

Tests:

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry


>>> bg = BaseGeometry()

>>> bg.integer_validator("my_int", 12)


>>> bg.integer_validator("width", 89)


>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/nada-zaki/alx/alx-python/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 11, in integer_validator
    raise TypeError("name must be an integer")
TypeError: name must be an integer


>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/nada-zaki/alx/alx-python/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 13, in integer_validator
    raise ValueError("age must be greater than 0")
ValueError: age must be greater than 0


>>> bg.integer_validator("distance", -4)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/nada-zaki/alx/alx-python/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 13, in integer_validator
    raise ValueError("distance must be greater than 0")
ValueError: distance must be greater than 0
