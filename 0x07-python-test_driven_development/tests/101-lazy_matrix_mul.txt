Task 100

function that multiplies 2 matrices:

Requirements:

m_a and m_b must be validated with these requirements in this order

m_a and m_b must be an list of lists of integers or floats:

if m_a or m_b is not a list: raise a TypeError exception with the message m_a must be a list or m_b must be a list
if m_a or m_b is not a list of lists: raise a TypeError exception with the message m_a must be a list of lists or m_b must be a list of lists
if m_a or m_b is empty (it means: = [] or = [[]]): raise a ValueError exception with the message m_a can't be empty or m_b can't be empty
if one element of those list of lists is not an integer or a float: raise a TypeError exception with the message m_a should contain only integers or floats or m_b should contain only integers or floats
if m_a or m_b is not a rectangle (all ‘rows’ should be of the same size): raise a TypeError exception with the message each row of m_a must be of the same size or each row of m_b must be of the same size
If m_a and m_b can’t be multiplied: raise a ValueError exception with the message m_a and m_b can't be multiplied


Test:

>>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

>>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
array([[ 7, 10],
       [15, 22]])

>>> lazy_matrix_mul([[1, 2]], [[3, 4], [5, 6]])
array([[13, 16]])

>>> lazy_matrix_mul([[3, 4], [5, 6]], [[1, 2]])
File "<stdin>", line 1, in <module>
  File "/home/nada-zaki/alx/alx-python/alx-higher_level_programming/0x07-python-test_driven_development/101-lazy_matrix_mul.py", line 79, in lazy_matrix_mul
    raise ValueError("m_a and m_b can't be multiplied")
ValueError: m_a and m_b can't be multiplied


>>> lazy_matrix_mul([[1, 2]], [[3, 4]])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/nada-zaki/alx/alx-python/alx-higher_level_programming/0x07-python-test_driven_development/101-lazy_matrix_mul.py", line 79, in lazy_matrix_mul
    raise ValueError("m_a and m_b can't be multiplied")
ValueError: m_a and m_b can't be multiplied

>>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2]])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/nada-zaki/alx/alx-python/alx-higher_level_programming/0x07-python-test_driven_development/101-lazy_matrix_mul.py", line 79, in lazy_matrix_mul
    raise ValueError("m_a and m_b can't be multiplied")
ValueError: m_a and m_b can't be multiplied

>>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, a]])

>>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, "hi"]])

>>> lazy_matrix_mul([[1, 2], [3, 4]], [[]])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/nada-zaki/alx/alx-python/alx-higher_level_programming/0x07-python-test_driven_development/100-lazy_matrix_mul.py", line 36, in lazy_matrix_mul
    raise ValueError("m_b can't be empty")
ValueError: m_b can't be empty

>>> lazy_matrix_mul([[]], [[1, 2], [3, 4]])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/nada-zaki/alx/alx-python/alx-higher_level_programming/0x07-python-test_driven_development/100-lazy_matrix_mul.py", line 31, in lazy_matrix_mul
    raise ValueError("m_a can't be empty")
ValueError: m_a can't be empty

>>> lazy_matrix_mul([[1, 2], [3, 4]], [])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/nada-zaki/alx/alx-python/alx-higher_level_programming/0x07-python-test_driven_development/100-lazy_matrix_mul.py", line 34, in lazy_matrix_mul
    raise ValueError("m_b can't be empty")
ValueError: m_b can't be empty

>>> lazy_matrix_mul([], [[1, 2], [3, 4]])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/nada-zaki/alx/alx-python/alx-higher_level_programming/0x07-python-test_driven_development/100-lazy_matrix_mul.py", line 29, in lazy_matrix_mul
    raise ValueError("m_a can't be empty")
ValueError: m_a can't be empty

>>> lazy_matrix_mul([[1, 2], [3]], [[1, 2], [3]])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/nada-zaki/alx/alx-python/alx-higher_level_programming/0x07-python-test_driven_development/100-lazy_matrix_mul.py", line 58, in lazy_matrix_mul
    raise TypeError("each row of m_a must be of the same size")
TypeError: each row of m_a must be of the same size

>>> lazy_matrix_mul([[1, 2], [3]], [[1, 2], [3, 4]])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/nada-zaki/alx/alx-python/alx-higher_level_programming/0x07-python-test_driven_development/100-lazy_matrix_mul.py", line 58, in lazy_matrix_mul
    raise TypeError("each row of m_a must be of the same size")
TypeError: each row of m_a must be of the same size

>>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3]])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/nada-zaki/alx/alx-python/alx-higher_level_programming/0x07-python-test_driven_development/100-lazy_matrix_mul.py", line 69, in lazy_matrix_mul
    raise TypeError("each row of m_b must be of the same size")
TypeError: each row of m_b must be of the same size

>>> lazy_matrix_mul([[1.4, 2.3], [3.5, 4.4]], [[1.1, 2.6], [3.4, 4.6]])
array([[ 9.36, 14.22],
       [18.81, 29.34]])

>>> lazy_matrix_mul([[1.1, 2.2], [3, 4]], [[1.3, 2], [3, 4.5]])
array([[ 8.03, 12.1 ],
       [15.9 , 24.  ]])

>>> lazy_matrix_mul([1, 2, 3, 4], [[1, 2], [3, 4]])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/nada-zaki/alx/alx-python/alx-higher_level_programming/0x07-python-test_driven_development/100-lazy_matrix_mul.py", line 21, in lazy_matrix_mul
    raise TypeError("m_a must be a list of lists")
TypeError: m_a must be a list of lists

>>> lazy_matrix_mul([[1, 2], [3, 4]], [1, 2, 3, 4])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/nada-zaki/alx/alx-python/alx-higher_level_programming/0x07-python-test_driven_development/100-lazy_matrix_mul.py", line 25, in lazy_matrix_mul
    raise TypeError("m_b must be a list of lists")
TypeError: m_b must be a list of lists

>>> lazy_matrix_mul([1, 2, 3, 4], [1, 2, 3, 4])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/nada-zaki/alx/alx-python/alx-higher_level_programming/0x07-python-test_driven_development/100-lazy_matrix_mul.py", line 21, in lazy_matrix_mul
    raise TypeError("m_a must be a list of lists")
TypeError: m_a must be a list of lists



