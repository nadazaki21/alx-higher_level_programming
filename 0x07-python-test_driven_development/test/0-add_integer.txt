Testing Task 0 function

adds 2 inetgerrs and returns their sum

Requirements: 
    Write a function that adds 2 integers.

Prototype: def add_integer(a, b=98):
a and b must be integers or floats, otherwise raise a TypeError exception with the message a must be an integer or b must be an integer
a and b must be first casted to integers if they are float
Returns an integer: the addition of a and b
You are not allowed to import any module


Tests:

>>> add_integer = __import__('0-add_integer').add_integer


>>> add_integer("1", "2")
Traceback (most recent call last):
   File <stdin>, line 9, in <module>
   File <stdin>, line 9, in add_integer
     raise TypeError("b must be an integer")
TypeError: a must be an integer

>>> add_integer("1", 2)
Traceback (most recent call last):
   File <stdin>, line 9, in <module>
   File <stdin>, line 9, in add_integer
     raise TypeError("b must be an integer")
TypeError: a must be an integer


>>> add_integer(1, "2")
Traceback (most recent call last):
   File <stdin>, line 9, in <module>
   File <stdin>, line 9, in add_integer
     raise TypeError("b must be an integer")
TypeError: b must be an integer

>>> add_integer(3.5, 3.5)
6


>>> add_integer(3, 3.5)
6


>>> add_integer(3.5, 3)
6


>>> add_integer(3, 3)
6




>>> add_integer(-3, 3)
0


>>> add_integer(3, -3)
0
